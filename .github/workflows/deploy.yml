#name: Deploy Spring Boot App
#
#on:
#  push:
#    branches:
#      - main # Replace with your default branch if different
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Cache Maven dependencies
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
#
#      - name: Build with Maven
#        run: mvn clean package
#
#      - name: Deploy to server
#        env:
#          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#          HOST: ${{ secrets.REMOTE_HOST }}
#          USER: ${{ secrets.REMOTE_USER }}
#          TARGET_DIR: /home/debian/teleder-core
#        run: |
#          echo "$PRIVATE_KEY" > private_key.pem
#          chmod 600 private_key.pem
#          scp -i private_key.pem -P 22 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null target/*.jar ${{ env.USER }}@${{ env.HOST }}:${{ env.TARGET_DIR }}/app.jar
#          ssh -i private_key.pem -p 22 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ env.USER }}@${{ env.HOST }} "systemctl restart my-spring-boot-app.service"
#          rm -f private_key.pem


name: Deploy to Debian Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build with Maven
        uses: nanovms/setup-java@v1
        with:
          java-version: '17'
      - run: mvn -B -DskipTests clean package

      - name: Copy JAR to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: target/my-app.jar
          target: /home/debian/my-app.jar

      - name: Restart app on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo systemctl stop my-app.service
            sudo mv /home/debian/my-app.jar /opt/my-app/
            sudo systemctl start my-app.service
